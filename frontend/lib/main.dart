import 'dart:io';
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:google_fonts/google_fonts.dart';

import '/services/auth_service.dart';
import 'pages/0_0_login.dart';
import 'pages/0_1_menu.dart';
import 'pages/1_0_orders_create.dart';
import 'pages/1_1_orders_list.dart';
import 'pages/2_0_equipment.dart';
import 'pages/3_0_calculations.dart';
import 'pages/4_0_shipment.dart';

Future<void> main() async {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AuthService –¥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  WidgetsFlutterBinding.ensureInitialized();
  await AuthService.init();

  HttpOverrides.global = MyHttpOverrides();
  
  runApp(const MyApp());
}

class MyHttpOverrides extends HttpOverrides {
  @override
  HttpClient createHttpClient(SecurityContext? context) {
    return super.createHttpClient(context)
      ..badCertificateCallback = (X509Certificate cert, String host, int port) {
        // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ –¥–æ–º–µ–Ω–∞ –∏ IP
        return host == 'servidar.work.gd' || host == '217.26.172.96';
      };
  }
}

final _router = GoRouter(
  initialLocation: '/0_0_login',
  routes: [
    GoRoute(path: '/0_0_login', builder: (context, state) => const LoginPage()),
    GoRoute(path: '/0_1_menu', builder: (context, state) => const MenuPage()),
    GoRoute(path: '/1_0_orders_create', builder: (context, state) => OrdersCreatePage(title: "–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É"),),
    GoRoute(path: '/1_1_orders_list', builder: (context, state) => const OrdersListPage(title: "–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫"),),
    GoRoute(path: '/2_0_equipment', builder: (context, state) => const EquipmentPage(title: "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"),),
    GoRoute(path: '/3_0_calculations', builder: (context, state) => const CalculationsPage(title: "–í–∑–∞–∏–º–æ—Ä–∞—Å—á–µ—Ç—ã"),),
    GoRoute(path: '/4_0_shipment', builder: (context, state) => const ShipmentPage(title: "–û—Ç–≥—Ä—É–∑–∫–∞ 4 –º–µ—Å."),),
],

  /// üîπ –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π redirect (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω)
  redirect: (context, state) {
    final token = AuthService.token; // –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ç–æ–∫–µ–Ω—É
    final loggingIn = state.matchedLocation == '/0_0_login';

    // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏ –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞ - –Ω–∞ –ª–æ–≥–∏–Ω
    if (token == null && !loggingIn) {
      return '/0_0_login';
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞ - –≤ –º–µ–Ω—é
    if (token != null && loggingIn) {
      return '/0_1_menu';
    }

    // –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö - –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å
    return null;
  },
);

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      title: 'Orders App',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.lightGreen),
        textTheme: GoogleFonts.robotoTextTheme(
          Theme.of(context).textTheme,
        ),
      ),
      routerConfig: _router,
    );
  }
}
