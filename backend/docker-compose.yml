services:
  db:
    image: postgres:16-alpine
    container_name: postgres_16_alp
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  api:
    build: .
    container_name: gorm_api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: ["/app/server"]
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      # - certbot_www:/var/www/certbot
      # - certbot_conf:/etc/letsencrypt:ro
    depends_on:
      - api
    networks:
      - app-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --email victorcostiuc@gmail.com -d servidar.work.gd --agree-tos --no-eff-email --force-renewal
    depends_on:
      - nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  certbot_www:
  certbot_conf: